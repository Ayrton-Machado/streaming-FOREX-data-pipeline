version: '3.8'

# Docker Compose para PRODUÇÃO
# Override do docker-compose.yml principal

services:
  # TimescaleDB - Configuração de produção
  timescaledb:
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
      TIMESCALEDB_TELEMETRY: 'off'
    command: >
      postgres
      -c shared_preload_libraries=timescaledb
      -c max_connections=500
      -c shared_buffers=1GB
      -c effective_cache_size=4GB
      -c maintenance_work_mem=512MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=64MB
      -c default_statistics_target=500
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=8MB
      -c min_wal_size=2GB
      -c max_wal_size=8GB
      -c log_min_duration_statement=2000
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Redis - Configuração de produção
  redis:
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # FastAPI Application - Produção
  forex-api:
    build:
      target: production
    environment:
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: WARNING
      # Outras variáveis de produção...
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Grafana - Produção
  grafana:
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SECURITY_SECRET_KEY: ${GRAFANA_SECRET_KEY}
      GF_ANALYTICS_REPORTING_ENABLED: false
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Nginx - SSL e configurações de produção
  nginx:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Remover Jupyter em produção
  jupyter:
    profiles:
      - development

networks:
  forex-network:
    external: true